---
# tasks file for docker
# https://docs.docker.com/engine/install/ubuntu/
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
- name: Creates Keyring directory
  command: sudo mkdir -p /etc/apt/keyrings

- name: Creates a Keyring file
  command: sudo touch /etc/apt/keyrings/docker.gpg

- name: Curls gpg from source
  ansible.builtin.command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg
  register: docker_gpg

- name: Writes gpg to file
  ansible.builtin.shell: "sudo echo '{{ docker_gpg.stdout }}' > /etc/apt/keyrings/docker.gpg"

- name: Gets release codename (short).
  ansible.builtin.command: lsb_release -cs
  register: release_name

- name: Gets Architecture
  ansible.builtin.command: dpkg --print-architecture
  register: _architecture

- name: Prints Architecture
  ansible.builtin.debug:
    var: _architecture.stdout

- name: Setup all requirements for Docker Installation
  ansible.builtin.apt:
    # INFO this might already may have been installed
    # update_cache: yes
    name: ['ca-certificates', 'curl', 'gnupg', 'lsb-release']
    state: present
  become_user: ansible_facts['user_id']
  # tags: never

# echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
- name: Manage docker source listing repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ _architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ release_name.stdout }} stable"
    state: present
    filename: docker
  become_user: ansible_facts['user_id']
  # tags: never
